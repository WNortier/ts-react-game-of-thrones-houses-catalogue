/**
 * A helper function for pagination
 * @totalRecordCountProp: Argument The total count of records,
 * @currentPageProp: Argument The current page selection (zero indexed),
 * @rowsPerPageProp: Argument The rows per page (default 10),
 * @returns
 * @totalRecordCount Variable The total count of records
 * @currentPage Variable The current page selection (zero indexed)
 * @rowsPerPage Variable The current rows per page selection
 * @_handleChangeTotalRecordCount Function to change the @totalRecordCount value
 * @_handleChangePage Function to change the @currentPage value
 * @_handleChangeRowsPerPage Function to handle the @rowsPerPage value
 */
type rowsPerPagePropVal = 10;
declare const useTsPaginator: (totalRecordCountProp: number, currentPageProp: number, rowsPerPageProp?: rowsPerPagePropVal) => {
    totalRecordCount: number;
    rowsPerPage: number;
    currentPage: number;
    _determinePaginationMessage: (options?: {
        verb: 'Showing' | 'Displaying';
        noun?: string;
        hideMessageOnZeroRecords?: boolean;
    }) => string;
    _determineRowsPerPageOptions: () => number[];
    _determinePaginationPages: () => number[];
    _determinePaginationDisabledState: () => boolean;
    _handleChangeTotalRecordCount: (newTotalRecordCount: number) => void;
    _handleChangeRowsPerPage: (newRowsPerPage: number) => void;
    _handleChangePage: (newPage: number) => void;
};
export default useTsPaginator;
